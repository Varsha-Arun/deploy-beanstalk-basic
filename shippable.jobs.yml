jobs:
  - name: deploy-beanstalk-basic_runCI
    type: runCI
    flags:
      - deploy-eb-basic
    steps:
      - OUT: deploy-eb-basic-image

  - name: deploy-eb-basic-deploy
    type: runCLI
    flags:
      - deploy-eb-basic
    steps:
      - IN: deploy-eb-basic-image
      - IN: deploy-eb-basic-config
        switch: off
      - IN: deploy-eb-env-params
        switch: off
      - IN: deploy-eb-basic-repo
        switch: off
      - TASK:
        - script: eb --version
        - script: pushd $DEPLOYEBBASICREPO_STATE/single_container && ls -al
        - script: shippable_replace Dockerrun.aws.json .elasticbeanstalk/config.yml
        - script: cat Dockerrun.aws.json
        - script: cat .elasticbeanstalk/config.yml
        - script: eb init -v
        - script: eb use ${DEPLOYEBENVPARAMS_PARAMS_AWS_EB_ENVIRONMENT_SINGLE} -v
        - script: eb deploy -v

        # - script: BUCKET_NAME=${DEPLOYEBENVPARAMS_PARAMS_AWS_EB_BUCKET_NAME}
        # - script: BUCKET_KEY="${DEPLOYEBENVPARAMS_PARAMS_AWS_EB_APPLICATION}-${DEPLOYEBENVPARAMS_PARAMS_AWS_EB_ENVIRONMENT_SINGLE}-${BUILD_NUMBER}.zip"
        # - script: sudo apt-get install zip
        # - script: pushd single_container && zip $BUCKET_KEY Dockerrun.aws.json
        # - script: aws s3 cp $BUCKET_KEY s3://$BUCKET_NAME/ && popd
        # - script: aws elasticbeanstalk create-application-version --application-name ${DEPLOYEBENVPARAMS_PARAMS_AWS_EB_APPLICATION} --version-label $BUCKET_KEY --source-bundle S3Bucket=$BUCKET_NAME,S3Key=$BUCKET_KEY
        # - script: aws elasticbeanstalk update-environment --application-name ${DEPLOYEBENVPARAMS_PARAMS_AWS_EB_APPLICATION} --environment-name ${DEPLOYEBENVPARAMS_PARAMS_AWS_EB_ENVIRONMENT_SINGLE} --version-label $BUCKET_KEY


  - name: deploy-eb-multi-deploy
    type: runCLI
    flags:
      - deploy-eb-basic
    steps:
      - IN: deploy-eb-basic-image
      - IN: deploy-eb-nginx-image
      - IN: deploy-eb-basic-config
        switch: off
      - IN: deploy-eb-env-params
        switch: off
      - IN: deploy-eb-basic-repo
        switch: off
      - TASK:
        - script: eb --version
        - script: pushd $DEPLOYEBBASICREPO_STATE/multi_container && ls -al
        - script: shippable_replace Dockerrun.aws.json .elasticbeanstalk/config.yml
        - script: cat Dockerrun.aws.json
        - script: cat .elasticbeanstalk/config.yml
        - script: eb init -v
        - script: eb use ${DEPLOYEBENVPARAMS_PARAMS_AWS_EB_ENVIRONMENT_MULTI} -v
        - script: eb deploy -v
        # - script: BUCKET_NAME=${DEPLOYEBENVPARAMS_PARAMS_AWS_EB_BUCKET_NAME}
        # - script: BUCKET_KEY="${DEPLOYEBENVPARAMS_PARAMS_AWS_EB_APPLICATION}-${DEPLOYEBENVPARAMS_PARAMS_AWS_EB_ENVIRONMENT_MULTI}-${BUILD_NUMBER}.zip"
        # - script: sudo apt-get install zip
        # - script: pushd multi_container && zip $BUCKET_KEY Dockerrun.aws.json
        # - script: aws s3 cp $BUCKET_KEY s3://$BUCKET_NAME/ && popd
        # - script: aws elasticbeanstalk create-application-version --application-name ${DEPLOYEBENVPARAMS_PARAMS_AWS_EB_APPLICATION} --version-label $BUCKET_KEY --source-bundle S3Bucket=$BUCKET_NAME,S3Key=$BUCKET_KEY
        # - script: aws elasticbeanstalk update-environment --application-name ${DEPLOYEBENVPARAMS_PARAMS_AWS_EB_APPLICATION} --environment-name ${DEPLOYEBENVPARAMS_PARAMS_AWS_EB_ENVIRONMENT_MULTI} --version-label $BUCKET_KEY


  # - name: deploy-beta-a
  #   type: runCLI
  #   steps:
  #     - IN: deploy-eb-basic-image
  #     - IN: deploy-eb-basic-config
  #       switch: off
  #     - IN: common-params
  #       switch: off
  #     - IN: beta-A-params
  #       switch: off
  #     - IN: deploy-eb-basic-repo
  #       switch: off
  #     - TASK:
  #
  #       - script: export IMAGE="${DEPLOYEBBASICIMAGE_SOURCENAME}:${DEPLOYEBBASICIMAGE_VERSIONNAME}"
  #       - script: export APPLICATION=${COMMONPARAMS_PARAMS_AWS_EB_APPLICATION}
  #       - script: export ENVIRONMENT=${BETAPARAMS_PARAMS_AWS_EB_ENVIRONMENT}
  #       - script: export BUCKET_NAME=${COMMONPARAMS_PARAMS_AWS_EB_BUCKET_NAME}
  #       - script: ./deploy.sh   # script that deploys to eb using above exported envs
  #       - script: ./validate.sh # script that makes sure deployment is successful
  #       - script: echo "versionName=${DEPLOYEBBASICIMAGE_VERSIONNAME}" >> $JOB_STATE/$JOB_NAME.env
  #
  # - name: deploy-beta-b
  #   type: runCLI
  #   steps:
  #     - IN: deploy-eb-basic-image
  #     - IN: deploy-eb-basic-config
  #       switch: off
  #     - IN: common-params
  #       switch: off
  #     - IN: beta-B-params
  #       switch: off
  #     - IN: deploy-eb-basic-repo
  #       switch: off
  #     - TASK:
  #       - script: export IMAGE="${DEPLOYEBBASICIMAGE_SOURCENAME}:${DEPLOYEBBASICIMAGE_VERSIONNAME}"
  #       - script: export APPLICATION=${COMMONPARAMS_PARAMS_AWS_EB_APPLICATION}
  #       - script: export ENVIRONMENT=${BETAPARAMS_PARAMS_AWS_EB_ENVIRONMENT}
  #       - script: export BUCKET_NAME=${COMMONPARAMS_PARAMS_AWS_EB_BUCKET_NAME}
  #       - script: ./deploy.sh   # script that deploys to eb using above exported envs
  #       - script: ./validate.sh # script that makes sure deployment is successful
